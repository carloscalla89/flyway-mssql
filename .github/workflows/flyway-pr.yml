name: Flyway PR Check

on:
  pull_request:
    branches: [ "main", "develop", "release/**", "feature/**" ]

permissions:
  contents: read

concurrency:
  group: flyway-pr-${{ github.ref }}
  cancel-in-progress: true

env:
  # CONTRASEÑA EFÍMERA SOLO PARA VALIDAR EN PR (BD desechable)
  SA_PASSWORD_PR: 'P@ssw0rd1!'   # cumple complejidad

jobs:
  validate:
    name: Validate Flyway on PR (SQL Server ephemeral)
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: ${{ env.SA_PASSWORD_PR }}
          MSSQL_PID: "Express"
        ports:
          - 14333:1433
        # Nota: quito healthcheck interno para evitar diferencias de path de sqlcmd dentro del contenedor

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Esperar a SQL con mssql-tools externo
        run: |
          for i in {1..60}; do
            docker run --rm --network host mcr.microsoft.com/mssql-tools /opt/mssql-tools/bin/sqlcmd \
              -S 127.0.0.1,14333 -U sa -P "${SA_PASSWORD_PR}" -Q "SELECT 1" && break
            echo "Esperando MSSQL... ($i/60)"; sleep 2
          done

      - name: Crear DB temporal para CI
        run: |
          docker run --rm --network host mcr.microsoft.com/mssql-tools /opt/mssql-tools/bin/sqlcmd \
            -S 127.0.0.1,14333 -U sa -P "${SA_PASSWORD_PR}" \
            -Q "IF DB_ID('FlywayPR') IS NULL CREATE DATABASE FlywayPR;"

      - name: Flyway validate + dry-run + migrate (ephemeral)
        run: |
          docker run --rm -v "$PWD":/flyway -w /flyway \
            flyway/flyway:10-alpine \
            -url="jdbc:sqlserver://127.0.0.1:14333;databaseName=FlywayPR;encrypt=false" \
            -user="sa" -password="${SA_PASSWORD_PR}" \
            -locations="filesystem:./sql" validate

          docker run --rm -v "$PWD":/flyway -w /flyway \
            flyway/flyway:10-alpine \
            -url="jdbc:sqlserver://127.0.0.1:14333;databaseName=FlywayPR;encrypt=false" \
            -user="sa" -password="${SA_PASSWORD_PR}" \
            -locations="filesystem:./sql" -dryRunOutput="build/flyway_dryrun.sql" migrate

          docker run --rm -v "$PWD":/flyway -w /flyway \
            flyway/flyway:10-alpine \
            -url="jdbc:sqlserver://127.0.0.1:14333;databaseName=FlywayPR;encrypt=false" \
            -user="sa" -password="${SA_PASSWORD_PR}" \
            -locations="filesystem:./sql" info

      - name: Subir dry-run como artefacto
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flyway-dryrun
          path: build/flyway_dryrun.sql

      - name: (Debug) Mostrar contenedores y logs si falla
        if: failure()
        run: |
          docker ps -a
          docker logs $(docker ps -aq --filter "ancestor=mcr.microsoft.com/mssql/server:2022-latest" | head -n1) || true
